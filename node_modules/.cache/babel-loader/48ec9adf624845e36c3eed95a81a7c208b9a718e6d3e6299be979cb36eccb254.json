{"ast":null,"code":"var _jsxFileName = \"/Users/nurs/Desktop/react-webapp/src/pages/elements_page/ElementsPage.jsx\";\nimport React from 'react';\nimport './ElementsPage.css';\nimport { Link, Routes, Route } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport Element from '../../components/element';\nimport ElementContainer from '../../components/element-container';\nimport elementsData from '../../components/elementsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElementsPage = () => {\n  const elementKeys = Object.keys(elementsData);\n  const shuffledElementKeys = shuffleArray(elementKeys);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ElementsPage--wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper2\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"elements-block--wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elements-block--navbar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"elements-block--navbar_buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HomePage--button elements-block--navbar_button\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/MainPage\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Go Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allElements-block\",\n          children: shuffledElementKeys.map(elementKey => /*#__PURE__*/_jsxDEV(ElementContainer, {\n            data: elementsData[elementKey]\n          }, elementKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 8\n  }, this);\n  function shuffleArray(array) {\n    const shuffledArray = array.slice();\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  }\n};\n_c = ElementsPage;\nexport default ElementsPage;\nvar _c;\n$RefreshReg$(_c, \"ElementsPage\");","map":{"version":3,"names":["React","Link","Routes","Route","Sidebar","Element","ElementContainer","elementsData","jsxDEV","_jsxDEV","ElementsPage","elementKeys","Object","keys","shuffledElementKeys","shuffleArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","elementKey","data","array","shuffledArray","slice","i","length","j","Math","floor","random","_c","$RefreshReg$"],"sources":["/Users/nurs/Desktop/react-webapp/src/pages/elements_page/ElementsPage.jsx"],"sourcesContent":["import React from 'react';\nimport './ElementsPage.css'\nimport { Link, Routes, Route } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport Element from '../../components/element';\nimport ElementContainer from '../../components/element-container';\nimport elementsData from '../../components/elementsData';\n\nconst ElementsPage = () => {\n    const elementKeys = Object.keys(elementsData);\n    const shuffledElementKeys = shuffleArray(elementKeys);\n    return(\n       <div className=\"ElementsPage--wrapper\">\n        <div className=\"wrapper2\">\n        <Sidebar/>\n        <main className='elements-block--wrapper'>\n            <div className=\"elements-block--navbar\">\n                <div className=\"elements-block--navbar_buttons\">\n                    <div className=\"HomePage--button elements-block--navbar_button\">\n                        <Link to=\"/MainPage\">\n                            <button>\n                                Go Home\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"allElements-block\">\n                      {shuffledElementKeys.map((elementKey) => (\n                      <ElementContainer key={elementKey} data={elementsData[elementKey]} />\n                      ))}\n            </div>\n        </main>\n        </div>\n       </div>\n    )\n    function shuffleArray(array) {\n        const shuffledArray = array.slice();\n        for (let i = shuffledArray.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n        }\n        return shuffledArray;\n      }\n}   \n\nexport default ElementsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}